{
  "_args": [
    [
      "beats",
      "/Users/quentin/Documents/Projects/musicxp/www"
    ]
  ],
  "_from": "beats@*",
  "_id": "beats@0.0.0",
  "_inCache": true,
  "_location": "/beats",
  "_npmUser": {
    "email": "hughskennedy@gmail.com",
    "name": "hughsk"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "name": "beats",
    "raw": "beats",
    "rawSpec": "",
    "scope": null,
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/beats/-/beats-0.0.0.tgz",
  "_shasum": "3534aeaeceb83992316f2338bec3c81fb2a6df09",
  "_shrinkwrap": null,
  "_spec": "beats",
  "_where": "/Users/quentin/Documents/Projects/musicxp/www",
  "author": {
    "email": "hughskennedy@gmail.com",
    "name": "Hugh Kennedy",
    "url": "http://github.com/hughsk"
  },
  "browser": "index.js",
  "bugs": {
    "url": "https://github.com/hughsk/beats/issues"
  },
  "dependencies": {},
  "description": "A naive but generic beat-detection module.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "3534aeaeceb83992316f2338bec3c81fb2a6df09",
    "tarball": "http://registry.npmjs.org/beats/-/beats-0.0.0.tgz"
  },
  "installable": true,
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    }
  ],
  "name": "beats",
  "optionalDependencies": {},
  "readme": "# beats [![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\nA naive but generic beat-detection module.\n\n## Usage ##\n\n[![beats](https://nodei.co/npm/beats.png?mini=true)](https://nodei.co/npm/beats)\n\n### `detect = require('beats')(bins[, minSeparation])` ###\n\nTakes an array of `bins`, and an optional `minSeparation` value which\ndetermines the minimum amount of time between beats for each bin (defaults to\n0).\n\nEach bin takes the following options:\n\n``` javascript\n{\n  // the minimum index to sample in\n  // the frequencies array.\n    lo: 0\n  // The maximum index to sample in\n  // the frequencies array.\n  , hi: 512\n  // The minimum volume at which to\n  // trigger a beat for this bin.\n  , threshold: 0\n  // the amount by which to decay\n  // the threshold for this bin for\n  // each sampled frame.\n  , decay: 0.005\n}\n```\n\n### `result = detect(frequencies[, dt])` ###\n\nReturns a `Float32Array` containing the beats for the current frame: one\nelement per bin. If an element's value is 0, then there is no beat this frame.\nOtherwise, the value will match the average volume of the bin's frequencies.\n\n`frequencies` is an array of audio frequencies for the current frame. `dt` is\nthe amount of time between this frame and the last one - it defaults to 1.\n\n## License ##\n\nMIT. See [LICENSE.md](http://github.com/hughsk/beats/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/beats"
  },
  "scripts": {},
  "version": "0.0.0"
}
